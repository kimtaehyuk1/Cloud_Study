쿠버네티스에(노드에) 실제로 애플리케이션 배포하기

노드들은 각각의 가상화 환경이라 생각하자

여기서는 마스터노드에서 워커노드에 NGINX를 설치하도록 명령보냄 (여기서 애플리케이션를 배포하는 쿠버네티스의 단위는 파드이다.)
(파드란? 파드는 컨테이너의 집합이다. 근데 대부분 하나의 컨테이너(도커)가 하나의 파드로 이뤄지는것이 많다. 또 파드는 한가지 일을 하는 그러한 단위라
쉽게 생각하자)

- 파드 배포 실습하기(실습환경은 SuperPuTTY에서)
NGINX파드를 배포

kubectl run nginx --image=nginx
(nginx로 돌리고 사용하려는 이미지는 nginx)

kubectl get pod
(pod가 뭐있는지 확인하기)

kubectl get pod -o wide
(배포한 파드 ip확인)

curl ip주소
(홈페이지에서 처음나오는 메시지 확인해 볼 수 있다.)

- 배포한 파드를 외부에서도 접속하게 하게 하려면?
(지금은 1개의 마스터노드와 3개의 엔지넥스가 배포된 워커노드가 쿠버네티스 클러스터 되있는 상태 근데 어떤 문을 통과해야지
외부와 통신이 되는데 통과하는 방법 첫번째로 문을 부순다((보안 엉망)) 두번째 DMZ라하는 안전한 구역을 만들어놓는다 
쿠버네티스는 안에있는 쿠버네티스 클러스터와 외부와 연결하기 위해 안전한 공간인 SVC(서비스)라하고 서비스 영역에 우리가 배포한
파드들을 연결하면 이것들이 서비스를 통해서 파드들을 찾아가서 안전하게 동작 할 수 있다. 하지만 실제로는 노드포트라는 것을 통해서 노드에 접속해 파드위치한거 찾아가는 구조)

위의 쿠버네티스 실제 연결구조 사진은 이슈에 올려놈

kubectl expose pod nginx --type=NodePort --port=80
(우리가 오픈하려고 하는 타입인 노드포트입력하고 실제로 그 파드가 내부에있는 컨테이너와 통신하기 위한 포트번호 지정)
대소문자 주의

kubectl get service
(노출 됬는지 확인하는거, 이때 노출시킨 포트번호가 나온다

kubectl get nodes -o wide
(노드들 정보보는거)

쨋든 아까 안보이던게 192.168.1.102:30504이렇게 하면 보임

근데 여기서 아무리 연결 시켜놔도 파드가 죽으면 말짱도루묵(정확히는 사실은 파드는 워커노드마다 다 배포되어있는게 아니라 1개만 배포되있다는점) 근데 원한느것은 파드가 노드들마다
다 배포되어 있어서 한개가 죽어도 다른놈이 받아줄수 있게 하는것이 우리가 원한느것 이게 디플로이먼트

-디플로이먼트
파드가 여러개 있는거, 여러개 모아놓은 단위
원래 kubectl run으로 파드와 디플로이먼트 배포했는데, 이제는 kubectl create나 kubectl apply로 파드와 디플로이먼트를 배포해야됨
(kubectl apply는 파일을 통해서 배포하는 방법임, 또 kubectl run은 단순하게 파드 1개만 배포할때 하는거지 거의 안쓰임)

-디플로이먼트 통해 파드 배포
kubectl create deployment deploy-nginx --image=nginx
(이렇게 하면 디플로이먼트 배포됨, 이름쓰고 이미지이름쓰고)

kubectl get pods
(파드 잘 배포됬는지 확인하기)

kubectl get pods -o wide
(ip 주소로 curl해서 다시 확인해보기)

---------엥? 1개만 배포됬는데? 디플로는 여러개 파드배포한다매? 
create명령어로 배포할때는 2번에 걸쳐서 해야되고 파일을 통해서는 한번에 여러개 배포

!!여러개를 배포하기 위해서는 내부에 ReplicaSet이라는 도움을 받아야 한다. 아까 파드 확인했을때 나온 해쉬값(deploy-nginx이름 뒤에있었던 이상한 숫자값들)이 리플리카셋에 대한 값이다.

-파드에 배포수 늘리기

kubectl scale deployment deploy-nginx --replicas=3
(scale할껀데 deployment를 이름은?deploy-nginx, 리플리카 셋은 3)
