생각나서 쓰는건데 디플로이의 여러 배포의 의미는 수직이 아닌 수평

-쿠버네티스 구조 살펴보기(중요!!!!)

쿠버네티스를 이루는 것들

쿠버네티스는 구역을 나누는 네임스페이스라는 단위를 가지고 있다. (= 쉽게 설명해 한 건물안에 101호에서 먼일 일어나는지 모르듯이 그렇게 구역이 있다.)
우리가 배포했던 nginx와 chk-hn같은 경우에는 default라 하는 기본 네임스페이스 안에 있었다.
하지만 쿠버네티스를 이루는 여러것들은 kube-system이라는 네임스페이스 안에 존재한다.

해당 구역에 있는 쿠버네티스 구성요소 확인하기 위해서는 
kubectl get pods -n kube-system
이렇게 친다.

-파드 배포시에 쿠버네티스 구성요소들이 하는 일
(이 밑에있는 과정은 이슈에 사진으로 넣어놈)
● 쿠버네티스의 기본 철학
마이크로서비스 아키텍처(MSA)로 구성되어있다.
(마이크로 아키텍처는 분업화라 생각하고 즉 각자의일 열심히 이에 반대되는 모놀리식 아키텍처는 한사람이 모든것을 다하는것이다.이건 밀집되어있다)

파드가 배포되는 과정으로 설명해보자
만약 kubectl create pod 명령어를 낸다고 가정해보자
파드 생성요청이 API서버 & etcd로 넘아가게 된다.(쿠버네티스에서는 API서버가 중심에 서있는 굳건한 나무 같은 존재)
-> 컨트롤러 매니저한테 보내는게 아니라 오히려 파드의 생성됬는지 감시한다.그냥 자기가 선언해논 값을 가지고 있다.
-> 그러면 선언해논 값을 보고 컨트롤러매니저가 와가지고 그걸보고 파드를 생성한다.(리플리카셋이나 이런거 값바꿔서 api서버에 값 저장해놈)
-> (스케줄러는 각 파드들을 배포하도록 스케쥴하는거 담당하는데) API 서버는 또 스케쥴러를 보면서 새로운 파드가 워커노드에 들어갔는지 감시한다.
-> 그러면 스케쥴러가 API서버로 와서 어 바뀐거없나? 파드가 생성되서 배포되어야 할거 없나? 식으로 스케쥴러가 와서 값을 보고 새로운 파드를 워커노드에 넣도록 스케줄한다.
-> (실제 워커노드의 파드 생성은 Kubelet이 하는데),(kubelet은 워커노드에 있다) 역시 API서버는 강요하지않고 Kubelet이 새로운 파드가 스케쥴러되서 진짜 워커노드에 잘 소속되어있는지 
감시 한다.
-> 여기서 부터는 살짝 방향이 틀어서 컨테이너 런타임을 통해서 파드의 동작관리를 한다.(직접 생성은 ㄴ)
-> 그 후 컨테이너 런타임이 컨테이너를 생성한다.
-> 마지막으로 kubelet이 파드 상태 정보를 API서버에 전달한다.

결론 : 쿠버네티스 동작방식은 좀 이상하다. 상식적으로 명령이 내려갓으면 그 명령을 누가 전달해줘야되는데 오히려 api서버는 굳건하게 상태값만 가지고 있고, 그 상태를 컨트롤매니저
스케줄러, 쿠버넷등이 계속 맞춰너으려고 하는 방식 이렇게 파드가 사용가능한 상태가 되고 우리가 알수 있다. 즉 이 시스템을 선언적인 시스템이다.

즉 추구하는 상태(우리가 명령어내릴)와 현재상태를 맞추려고함(감시를 통해) 이게 쿠버네티스 알고리즘이다. 감시 -> 차이발견 -> 상태변경

